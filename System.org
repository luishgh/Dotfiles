#+TITLE: GNU Guix System Configuration
#+AUTHOR: Luis Henrique
#+DESCRIPTION: My personal GNU System config.
#+PROPERTY: header-args:scheme :tangle .config/guix/system.scm

* About This Config
I started using Guix System after David's [[https://youtube.com/playlist?list=PLEoMzSkcN8oNxnj7jm5V2ZcGc52002pQU]["Craft Your System with GNU Guix"]] video series. For now, I only do a simple =system.scm= due to only having one notebook. Due to not having it on the default path, I run ~sudo guix system reconfigure $HOME/.config/guix/system.scm~, which passes the system configuration as an argument.

Obs: In the past, I used ~sudo -E~ to run ~guix system reconfigure~, but it turns out it is not necessary and [[https://github.com/daviwil/dotfiles/issues/11][causes problems]].

* Channels
Unlike most distros, Guix pulls package definitions from Git repositories, so adding a new collection of packages is as easy as adding a new git repo to this code. At the moment, I only use the default guix channel, nonguix channel (for non-free drivers), and [[https://github.com/luishgh/guix-channel][my personal channel]].

*.config/guix/channels.scm*

#+begin_src scheme :tangle .config/guix/channels.scm
  ;; NOTE: This file is generated from System.org.  Please see commentary there.

  (list (channel
          (name 'guix)
          (url "https://git.savannah.gnu.org/git/guix.git")
          (branch "master")
          (introduction
            (make-channel-introduction
              "9edb3f66fd807b096b48283debdcddccfea34bad"
              (openpgp-fingerprint
                "BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA"))))
        (channel
         (name 'lhgh-channel)
         (url "file:///home/luishgh/Projects/Code/guix-channel"))
        (channel
          (name 'nonguix)
          (url "https://gitlab.com/nonguix/nonguix")
          (branch "master")
          (introduction
            (make-channel-introduction
              "897c1a470da759236cc11798f4e0a5f7d4d59fbc"
              (openpgp-fingerprint
                "2A39 3FFF 68F4 EF7A 3D29  12AF 6F51 20A0 22FB B2D5")))))
#+end_src

* System

** Imports

#+begin_src scheme
  ;; NOTE: This file is generated from System.org.  Please see commentary there.

  (use-modules (gnu)
               (nongnu packages linux)
               (nongnu system linux-initrd)
               (srfi srfi-1)) ; for extended delete procedure
  (use-service-modules desktop networking
                       sddm
                       ssh xorg
                       sound sysctl
                       syncthing
                       virtualization nix)
  (use-package-modules package-management)

#+end_src

** Custom variables

#+begin_src scheme
  ;; Allow members of the "video" group to change the screen brightness.
  (define %backlight-udev-rule
    (udev-rule
     "90-backlight.rules"
     (string-append "ACTION==\"add\", SUBSYSTEM==\"backlight\", "
                    "RUN+=\"/run/current-system/profile/bin/chgrp video /sys/class/backlight/%k/brightness\""
                    "\n"
                    "ACTION==\"add\", SUBSYSTEM==\"backlight\", "
                    "RUN+=\"/run/current-system/profile/bin/chmod g+w /sys/class/backlight/%k/brightness\"")))

  (define %netfilter-bridges-sysctl-config
    '(("net.bridge.bridge-nf-call-ip6tables" . "0")
      ("net.bridge.bridge-nf-call-iptables" . "0")
      ("net.bridge.bridge-nf-call-arptables" . "0")))

  (define %ipv4-forwarding-sysctl-config
    '(("net.ipv4.ip_forward" . "1")))

  ;; Switch DDX driver to intel
  (define %xorg-tear-free-config
    "Section \"Device\"
      Identifier  \"Intel Graphics\"
      Driver      \"intel\"
      Option \"Backlight\" \"intel_backlight\"
      Option      \"TearFree\"    \"true\"
      Option      \"AccelMethod\" \"sna\"
    EndSection
    ")

  ;; Define a libinput configuration that works well for modern touchpads
  (define %xorg-libinput-config
    "Section \"InputClass\"
      Identifier \"Touchpads\"
      Driver \"libinput\"
      MatchDevicePath \"/dev/input/event*\"
      MatchIsTouchpad \"on\"
      Option \"Tapping\" \"on\"
      Option \"TappingDrag\" \"on\"
      Option \"DisableWhileTyping\" \"on\"
      Option \"MiddleEmulation\" \"on\"
      Option \"ScrollMethod\" \"twofinger\"
    EndSection
    Section \"InputClass\"
      Identifier \"Keyboards\"
      Driver \"libinput\"
      MatchDevicePath \"/dev/input/event*\"
      MatchIsKeyboard \"on\"
    EndSection
    ")

  ;; overriding %desktop-services
  (define %my-desktop-services
    (modify-services %desktop-services
                     ;; Configure the substitute server for the Nonguix repo
                     (guix-service-type config =>
                                        (guix-configuration
                                         (inherit config)
                                         (substitute-urls
                                          (append (list "https://substitutes.nonguix.org")
                                                  %default-substitute-urls))
                                         (authorized-keys
                                          (append (list (plain-file "substitutes.nonguix.org.pub" "(public-key
   (ecc
    (curve Ed25519)
    (q #C1FD53E5D4CE971933EC50C9F307AE2171A2D3B52C804642A7A35F84F3A4EA98#)
    )
   )"))
                                %default-authorized-guix-keys))))
                     (elogind-service-type config =>
                                           (elogind-configuration (inherit config)
                                                                  (handle-lid-switch-external-power 'suspend)))
                     (udev-service-type config =>
                                        (udev-configuration (inherit config)
                                                            (rules (cons %backlight-udev-rule
                                                                         (udev-configuration-rules config)))))

                     (sysctl-service-type config =>
                                          (sysctl-configuration
                                           (settings (append %ipv4-forwarding-sysctl-config
                                                             %netfilter-bridges-sysctl-config
                                                             %default-sysctl-settings))))

                     (pulseaudio-service-type config =>
                                              (pulseaudio-configuration (inherit config)
                                                                        (client-conf '((autospawn . no )))
                                                                        (daemon-conf '((flat-volumes . no)
                                                                                       (exit-idle-time . -1)))))
                     (delete gdm-service-type)))

#+end_src

** Operating System

*** General Settings

#+begin_src scheme
  (operating-system
    (kernel linux)
    (initrd microcode-initrd)
    (firmware (list linux-firmware))
    (locale "en_US.utf8")
    (timezone "America/Sao_Paulo")
    (keyboard-layout (keyboard-layout "br"))
    (host-name "LenovoGuix")
#+end_src

*** User Settings

#+begin_src scheme
    (users (cons* (user-account
                    (name "luishgh")
                    (comment "Luis Henrique")
                    (group "users")
                    (home-directory "/home/luishgh")
                    (supplementary-groups
                     '("wheel" "netdev" "audio"
                       "video" "libvirt" "kvm")))
                  %base-user-accounts))
#+end_src

*** System Packages

#+begin_src scheme
  (packages
   (append
    (list (specification->package "emacs")
          (specification->package "git")

          ;; Xorg
          (specification->package "setxkbmap")
          (specification->package "xhost")
          (specification->package "picom")

          ;; Wayland
          (specification->package "sway")
          (specification->package "bemenu")
          (specification->package "xdg-desktop-portal")
          (specification->package "xdg-desktop-portal-wlr")
  
          (specification->package "feh")
          (specification->package "nss-certs"))
    %base-packages))
#+end_src

*** System Services

#+begin_src scheme
      (services
       (append
        (list
         ;; (service slim-service-type
         ;;               (slim-configuration
         ;;                (default-user "luishgh")
         ;; (xorg-configuration
         ;;  (xorg-configuration
         ;;   (extra-config (list %xorg-tear-free-config %xorg-libinput-config))
         ;;   (keyboard-layout keyboard-layout)))))
         (service sddm-service-type
                  (sddm-configuration
                   (auto-login-user "luishgh")
                   (display-server "wayland")
                   (xorg-configuration
                    (xorg-configuration
                     (extra-config (list %xorg-tear-free-config %xorg-libinput-config))
                     (keyboard-layout keyboard-layout)))))

         ;; VMs
         (service virtlog-service-type)
         (service libvirt-service-type
                  (libvirt-configuration
                   (unix-sock-group "libvirt")
                   (tls-port "16555")))

         ;; Guix dev
         (service qemu-binfmt-service-type
                  (qemu-binfmt-configuration
                   (platforms (lookup-qemu-platforms "ppc64le"))))

         (service syncthing-service-type
                  (syncthing-configuration (user "luishgh")))

         ;; Nix
         (service nix-service-type
                  (nix-configuration
                   (extra-config '("experimental-features = nix-command flakes")))))
        %my-desktop-services))
#+end_src

*** File Systems and Bootloader

#+begin_src scheme
  (bootloader
   (bootloader-configuration
    (bootloader grub-efi-bootloader)
    (targets '("/boot/efi"))
    (keyboard-layout keyboard-layout)))
  (swap-devices
   (list
    (swap-space
     (target (uuid "835d6068-ad0b-4a76-831c-99156d78af80"))
     (discard? #t))))
  (file-systems
    (cons* (file-system
             (mount-point "/")
             (device
               (uuid "7e442e31-8bb9-43f1-b32d-bac04909ab45"
                     'btrfs))
             (type "btrfs"))
           (file-system
             (mount-point "/mnt/hdd")
             (device (uuid "3113a99e-a55b-4a3f-8d54-d36c86abbf46"
                           'ext4))
             (type "ext4")
             (create-mount-point? #t))
           (file-system
             (mount-point "/boot/efi")
             (device (uuid "D20C-1BEE" 'fat32))
             (type "vfat"))
           %base-file-systems)))
#+end_src
